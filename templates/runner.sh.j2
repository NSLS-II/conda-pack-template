#!/bin/bash

set -vxeuo pipefail

{% for key, value in params.items() -%}
export {{key}}="{{value}}"
{% endfor %}
if [ -f "${env_name}.tar.gz" ]; then
    echo -e "File ${env_name}.tar.gz exists. Move it or remove it before proceeding."
    exit 1
fi

export build_dir="/build"
repo_dir="/repo"
artifacts_dir="${PWD}/artifacts"
mkdir -m 0777 -v -p ${artifacts_dir}

timestamp=$(date +%Y%m%d%H%M%S)

${docker_binary} image build . -t ${env_name}:latest \
                     -t ${env_name}:${timestamp}

daemon_mode="${GITHUB_ACTIONS:-false}"
if [ "${daemon_mode}" == "true" ]; then
    interactive="-d"
else
    interactive="-it"
fi
docker_run_cmd="${docker_binary} run ${interactive} --rm --name ${env_name} \
                    -v ${artifacts_dir}:${build_dir}:rw,z,delegated \
                    -v ${PWD}:${repo_dir} \
                    -e env_name -e channels -e build_dir \
                    ${env_name}:${timestamp} bash ${repo_dir}/export.sh"
echo -e "docker run command:\n\n${docker_run_cmd}\n"

if [ "${daemon_mode}" == "true" ]; then
    container_id=$(${docker_run_cmd})
    ${docker_binary} logs --follow $container_id
else
    ${docker_run_cmd}
fi

{%- for key in docker_upload %}
{% if key == "ghcr" %}
# echo $GITHUB_TOKEN | ${docker_binary} login ghcr.io --username $GITHUB_USERNAME --password-stdin
# ${docker_binary} tag ${env_name}:${timestamp} ghcr.io/$GITHUB_USERNAME/${env_name}:${timestamp}
# ${docker_binary} tag ${env_name}:${timestamp} ghcr.io/$GITHUB_USERNAME/${env_name}:latest
# ${docker_binary} image push ghcr.io/$GITHUB_USERNAME/${env_name}:${timestamp}
# ${docker_binary} image push ghcr.io/$GITHUB_USERNAME/${env_name}:latest
{% elif key == "dockerhub" %}
# echo $DOCKER_PASSWORD | ${docker_binary} login --username $DOCKER_USERNAME --password-stdin
# ${docker_binary} tag ${env_name}:${timestamp} $DOCKER_REPO:${timestamp}
# ${docker_binary} tag ${env_name}:${timestamp} $DOCKER_REPO:latest
# ${docker_binary} push $DOCKER_REPO:${timestamp}
# ${docker_binary} push $DOCKER_REPO:latest
{% elif key == "quay" %}
# ${docker_binary} create --name extra-container ${env_name}:${timestamp}
# echo $QUAY_PASSWORD | ${docker_binary} login quay.io -u $QUAY_USERNAME --password-stdin
# ${docker_binary} commit extra-container quay.io/$QUAY_REPO:${timestamp}
# ${docker_binary} commit extra-container quay.io/$QUAY_REPO:latest
# ${docker_binary} push quay.io/$QUAY_REPO:${timestamp}
# ${docker_binary} push quay.io/$QUAY_REPO:latest
# ${docker_binary} rm extra-container
# ${docker_binary} image rm quay.io/$QUAY_REPO
{% else %}
echo "Invalid entry."
exit 1
{% endif -%}
{% endfor -%}
{%- if zenodo_upload == "yes" %}

# Check the environment variables to make sure ZENODO_ACCESS_TOKEN exists.
env | sort -u

python3 zenodo_uploader.py -f ${artifacts_dir}/${env_name}.tar.gz \
                           -f ${artifacts_dir}/${env_name}.yml \
                           -f ${artifacts_dir}/${env_name}-sha256sum.txt \
                           -f ${artifacts_dir}/${env_name}-md5sum.txt \
                           -f Dockerfile \
                           -f ${0} \
                           -c ${config_file} \
                           --publish
{% endif %}
